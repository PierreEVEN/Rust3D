struct ShaderResourcePool {
	bindings: HashMap<BindPoint, Arc<ShaderResource>>,
	per_stage: HashMap<ShaderStage, HashMap<PassID, Arc<ShaderResource>>>
}

impl ShaderResourcePool {
	pub fn insert(&mut self, ShaderResource);
	pub fn get_type(&self, BindPoint) -> Option<DescriptorType>;
	pub fn get_resources(&self, &ShaderStage, &PassID);
}

struct ShaderResource {
	name: BindPoint,
	location: u32,
	type: DescriptorType
}

struct MaterialResourcePool {
	resources: HashMap<BindPoint, MaterialResourceEnum>,
	bindings: ShaderResourcePool,
}